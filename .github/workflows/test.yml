name: CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin123
          
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run Backend Tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://admin:admin123@localhost:27017/vod_test?authSource=admin
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
      run: npm test
      
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test -- --watchAll=false
      
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
      
  docker-build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build Backend Docker Image
      run: docker build -t vod-backend:test ./backend
      
    - name: Build Frontend Docker Image
      run: docker build -t vod-frontend:test ./frontend
      
    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:5000/api/health || exit 1
        docker-compose down
